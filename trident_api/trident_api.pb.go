// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trident_api.proto

/*
Package trident is a generated protocol buffer package.

It is generated from these files:
	trident_api.proto

It has these top-level messages:
	HelloPoseidon
	PoseidonReply
*/
package trident

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloPoseidon struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloPoseidon) Reset()                    { *m = HelloPoseidon{} }
func (m *HelloPoseidon) String() string            { return proto.CompactTextString(m) }
func (*HelloPoseidon) ProtoMessage()               {}
func (*HelloPoseidon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloPoseidon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type PoseidonReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PoseidonReply) Reset()                    { *m = PoseidonReply{} }
func (m *PoseidonReply) String() string            { return proto.CompactTextString(m) }
func (*PoseidonReply) ProtoMessage()               {}
func (*PoseidonReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PoseidonReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloPoseidon)(nil), "trident.HelloPoseidon")
	proto.RegisterType((*PoseidonReply)(nil), "trident.PoseidonReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PingPoseidon service

type PingPoseidonClient interface {
	// Sends a greeting
	GetPoseidon(ctx context.Context, in *HelloPoseidon, opts ...grpc.CallOption) (*PoseidonReply, error)
	// Sends another greeting
	GetPoseidonAgain(ctx context.Context, in *HelloPoseidon, opts ...grpc.CallOption) (*PoseidonReply, error)
}

type pingPoseidonClient struct {
	cc *grpc.ClientConn
}

func NewPingPoseidonClient(cc *grpc.ClientConn) PingPoseidonClient {
	return &pingPoseidonClient{cc}
}

func (c *pingPoseidonClient) GetPoseidon(ctx context.Context, in *HelloPoseidon, opts ...grpc.CallOption) (*PoseidonReply, error) {
	out := new(PoseidonReply)
	err := grpc.Invoke(ctx, "/trident.PingPoseidon/GetPoseidon", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingPoseidonClient) GetPoseidonAgain(ctx context.Context, in *HelloPoseidon, opts ...grpc.CallOption) (*PoseidonReply, error) {
	out := new(PoseidonReply)
	err := grpc.Invoke(ctx, "/trident.PingPoseidon/GetPoseidonAgain", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PingPoseidon service

type PingPoseidonServer interface {
	// Sends a greeting
	GetPoseidon(context.Context, *HelloPoseidon) (*PoseidonReply, error)
	// Sends another greeting
	GetPoseidonAgain(context.Context, *HelloPoseidon) (*PoseidonReply, error)
}

func RegisterPingPoseidonServer(s *grpc.Server, srv PingPoseidonServer) {
	s.RegisterService(&_PingPoseidon_serviceDesc, srv)
}

func _PingPoseidon_GetPoseidon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloPoseidon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingPoseidonServer).GetPoseidon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trident.PingPoseidon/GetPoseidon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingPoseidonServer).GetPoseidon(ctx, req.(*HelloPoseidon))
	}
	return interceptor(ctx, in, info, handler)
}

func _PingPoseidon_GetPoseidonAgain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloPoseidon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingPoseidonServer).GetPoseidonAgain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trident.PingPoseidon/GetPoseidonAgain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingPoseidonServer).GetPoseidonAgain(ctx, req.(*HelloPoseidon))
	}
	return interceptor(ctx, in, info, handler)
}

var _PingPoseidon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trident.PingPoseidon",
	HandlerType: (*PingPoseidonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPoseidon",
			Handler:    _PingPoseidon_GetPoseidon_Handler,
		},
		{
			MethodName: "GetPoseidonAgain",
			Handler:    _PingPoseidon_GetPoseidonAgain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trident_api.proto",
}

func init() { proto.RegisterFile("trident_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x29, 0xca, 0x4c,
	0x49, 0xcd, 0x2b, 0x89, 0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87,
	0x0a, 0x29, 0x29, 0x73, 0xf1, 0x7a, 0xa4, 0xe6, 0xe4, 0xe4, 0x07, 0xe4, 0x17, 0xa7, 0x66, 0xa6,
	0xe4, 0xe7, 0x09, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x81, 0xd9, 0x4a, 0x9a, 0x5c, 0xbc, 0x30, 0xf9, 0xa0, 0xd4, 0x82, 0x9c, 0x4a, 0x21, 0x09,
	0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0x74, 0x98, 0x3a, 0x18, 0xd7, 0x68, 0x2a, 0x23, 0x17,
	0x4f, 0x40, 0x66, 0x5e, 0x3a, 0xdc, 0x3c, 0x7b, 0x2e, 0x6e, 0xf7, 0xd4, 0x12, 0x38, 0x57, 0x4c,
	0x0f, 0x6a, 0xb3, 0x1e, 0x8a, 0xb5, 0x52, 0x08, 0x71, 0x14, 0x9b, 0x94, 0x18, 0x84, 0x5c, 0xb8,
	0x04, 0x90, 0x0c, 0x70, 0x4c, 0x4f, 0xcc, 0x24, 0xc3, 0x94, 0x24, 0x36, 0xb0, 0xbf, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x30, 0xd6, 0x0a, 0x89, 0x0c, 0x01, 0x00, 0x00,
}
